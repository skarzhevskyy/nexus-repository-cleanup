name: Build

on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GITHUB_DEPENDENCY_GRAPH_ENABLED: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/release' }}
          dependency-graph: generate-and-submit # This is done in Publish only

      - name: Validate Gradle wrapper
        run: |
          echo "Validating Gradle wrapper..."
          ./gradlew --version

      - name: Read Project version
        id: version
        run: |
          # Get the version and set it as an output
          version=$(./gradlew properties -q | awk '/^version:/ {print $2}')
          echo "Project version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Download dependencies
        run: |
          echo "Downloading project dependencies..."
          ./gradlew dependencies --configuration runtimeClasspath

      - name: Compile project
        run: |
          echo "Compiling Java sources..."
          echo "Java version: $(java -version 2>&1 | head -1)"
          echo "Gradle version: $(./gradlew --version | grep 'Gradle' | head -1)"
          ./gradlew build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: executable-jar
          path: |
            build/libs
            !build/libs/*-plain.jar
          retention-days: 30

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Container image to GitHub Packages
        if: github.event_name != 'pull_request'
        run: |
          echo "Publishing Container image to GitHub Packages..."
          ./gradlew jib -Djib.console=plain \
            -Pcontainer.image.registry="ghcr.io/${{ github.repository_owner }}" \
            -Pcontainer.image.name="${{ github.event.repository.name }}"
        env:
          GITHUB_DEPENDENCY_GRAPH_ENABLED: true

      - name: Package and Publish Helm Chart
        if: github.event_name != 'pull_request'
        run: |
          echo "Packaging and publishing Helm chart to GitHub Container Registry..."
          
          # Install Helm
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          
          PROJECT_VERSION=${{ steps.version.outputs.version }}
          
          # Package the chart
          helm package helm/nexus-repository-cleanup --version "${PROJECT_VERSION}" --app-version "${PROJECT_VERSION}"
          
          # Login to GHCR for Helm
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin
          
          # Push the chart
          helm push "nexus-repository-cleanup-${PROJECT_VERSION}".tgz oci://ghcr.io/${{ github.repository_owner }}/charts
